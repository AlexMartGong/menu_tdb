<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Kmd4ATXlAAAAAElFTkSuQmCC
</value>
  </data>
</root>