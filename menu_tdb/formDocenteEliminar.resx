<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>