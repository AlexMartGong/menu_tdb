<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>